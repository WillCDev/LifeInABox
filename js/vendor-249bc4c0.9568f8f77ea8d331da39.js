"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunklife_in_a_box"] = self["webpackChunklife_in_a_box"] || []).push([[579],{

/***/ 2106:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": () => (/* binding */ es)\n});\n\n// UNUSED EXPORTS: RHAP_UI\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/classCallCheck.js\nvar classCallCheck = __webpack_require__(4575);\nvar classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/createClass.js\nvar createClass = __webpack_require__(3913);\nvar createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/assertThisInitialized.js\nvar assertThisInitialized = __webpack_require__(1506);\nvar assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/inherits.js\nvar inherits = __webpack_require__(2205);\nvar inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\nvar possibleConstructorReturn = __webpack_require__(8585);\nvar possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/getPrototypeOf.js\nvar getPrototypeOf = __webpack_require__(9754);\nvar getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/defineProperty.js\nvar defineProperty = __webpack_require__(9713);\nvar defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(7294);\n// EXTERNAL MODULE: ./node_modules/@iconify/react/dist/iconify.mjs\nvar iconify = __webpack_require__(1954);\n// EXTERNAL MODULE: ./node_modules/@iconify/icons-mdi/play-circle.js\nvar play_circle = __webpack_require__(1329);\n// EXTERNAL MODULE: ./node_modules/@iconify/icons-mdi/pause-circle.js\nvar pause_circle = __webpack_require__(8047);\n// EXTERNAL MODULE: ./node_modules/@iconify/icons-mdi/skip-previous.js\nvar skip_previous = __webpack_require__(9243);\n// EXTERNAL MODULE: ./node_modules/@iconify/icons-mdi/skip-next.js\nvar skip_next = __webpack_require__(3800);\n// EXTERNAL MODULE: ./node_modules/@iconify/icons-mdi/fast-forward.js\nvar fast_forward = __webpack_require__(4539);\n// EXTERNAL MODULE: ./node_modules/@iconify/icons-mdi/rewind.js\nvar rewind = __webpack_require__(1402);\n// EXTERNAL MODULE: ./node_modules/@iconify/icons-mdi/volume-high.js\nvar volume_high = __webpack_require__(6710);\n// EXTERNAL MODULE: ./node_modules/@iconify/icons-mdi/volume-mute.js\nvar volume_mute = __webpack_require__(9920);\n// EXTERNAL MODULE: ./node_modules/@iconify/icons-mdi/repeat.js\nvar repeat = __webpack_require__(6233);\n// EXTERNAL MODULE: ./node_modules/@iconify/icons-mdi/repeat-off.js\nvar repeat_off = __webpack_require__(692);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/extends.js\nvar helpers_extends = __webpack_require__(7154);\nvar extends_default = /*#__PURE__*/__webpack_require__.n(helpers_extends);\n;// CONCATENATED MODULE: ./node_modules/react-h5-audio-player/es/utils.js\nvar getMainLayoutClassName = function getMainLayoutClassName(layout) {\n  switch (layout) {\n    case 'stacked':\n      return 'rhap_stacked';\n\n    case 'stacked-reverse':\n      return 'rhap_stacked-reverse';\n\n    case 'horizontal':\n      return 'rhap_horizontal';\n\n    case 'horizontal-reverse':\n      return 'rhap_horizontal-reverse';\n\n    default:\n      return 'rhap_stacked';\n  }\n};\nvar getPosX = function getPosX(event) {\n  if (event instanceof MouseEvent) {\n    return event.clientX;\n  } else {\n    return event.touches[0].clientX;\n  }\n};\n\nvar addHeadingZero = function addHeadingZero(num) {\n  return num > 9 ? num.toString() : \"0\".concat(num);\n};\n\nvar getDisplayTimeBySeconds = function getDisplayTimeBySeconds(seconds, totalSeconds, timeFormat) {\n  if (!isFinite(seconds)) {\n    return null;\n  }\n\n  var min = Math.floor(seconds / 60);\n  var minStr = addHeadingZero(min);\n  var secStr = addHeadingZero(Math.floor(seconds % 60));\n  var minStrForHour = addHeadingZero(Math.floor(min % 60));\n  var hourStr = Math.floor(min / 60);\n  var mmSs = \"\".concat(minStr, \":\").concat(secStr);\n  var hhMmSs = \"\".concat(hourStr, \":\").concat(minStrForHour, \":\").concat(secStr);\n\n  if (timeFormat === 'auto') {\n    if (totalSeconds >= 3600) {\n      return hhMmSs;\n    } else {\n      return mmSs;\n    }\n  } else if (timeFormat === 'mm:ss') {\n    return mmSs;\n  } else if (timeFormat === 'hh:mm:ss') {\n    return hhMmSs;\n  }\n};\nfunction throttle(func, limit) {\n  var inThrottle = false;\n  return function (arg) {\n    if (!inThrottle) {\n      func(arg);\n      inThrottle = true;\n      setTimeout(function () {\n        return inThrottle = false;\n      }, limit);\n    }\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/react-h5-audio-player/es/ProgressBar.js\n\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar ProgressBar = function (_Component) {\n  inherits_default()(ProgressBar, _Component);\n\n  var _super = _createSuper(ProgressBar);\n\n  function ProgressBar() {\n    var _this;\n\n    classCallCheck_default()(this, ProgressBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"audio\", void 0);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"timeOnMouseMove\", 0);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"hasAddedAudioEventListener\", false);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"downloadProgressAnimationTimer\", void 0);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"state\", {\n      isDraggingProgress: false,\n      currentTimePos: '0%',\n      hasDownloadProgressAnimation: false,\n      downloadProgressArr: [],\n      waitingForSeekCallback: false\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"getCurrentProgress\", function (event) {\n      var _this$props = _this.props,\n          audio = _this$props.audio,\n          progressBar = _this$props.progressBar;\n      var isSingleFileProgressiveDownload = audio.src.indexOf('blob:') !== 0 && typeof _this.props.srcDuration === 'undefined';\n\n      if (isSingleFileProgressiveDownload && (!audio.src || !isFinite(audio.currentTime) || !progressBar.current)) {\n        return {\n          currentTime: 0,\n          currentTimePos: '0%'\n        };\n      }\n\n      var progressBarRect = progressBar.current.getBoundingClientRect();\n      var maxRelativePos = progressBarRect.width;\n      var relativePos = getPosX(event) - progressBarRect.left;\n\n      if (relativePos < 0) {\n        relativePos = 0;\n      } else if (relativePos > maxRelativePos) {\n        relativePos = maxRelativePos;\n      }\n\n      var duration = _this.getDuration();\n\n      var currentTime = duration * relativePos / maxRelativePos;\n      return {\n        currentTime: currentTime,\n        currentTimePos: \"\".concat((relativePos / maxRelativePos * 100).toFixed(2), \"%\")\n      };\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleContextMenu\", function (event) {\n      event.preventDefault();\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleMouseDownOrTouchStartProgressBar\", function (event) {\n      event.stopPropagation();\n\n      var _this$getCurrentProgr = _this.getCurrentProgress(event.nativeEvent),\n          currentTime = _this$getCurrentProgr.currentTime,\n          currentTimePos = _this$getCurrentProgr.currentTimePos;\n\n      if (isFinite(currentTime)) {\n        _this.timeOnMouseMove = currentTime;\n\n        _this.setState({\n          isDraggingProgress: true,\n          currentTimePos: currentTimePos\n        });\n\n        if (event.nativeEvent instanceof MouseEvent) {\n          window.addEventListener('mousemove', _this.handleWindowMouseOrTouchMove);\n          window.addEventListener('mouseup', _this.handleWindowMouseOrTouchUp);\n        } else {\n          window.addEventListener('touchmove', _this.handleWindowMouseOrTouchMove);\n          window.addEventListener('touchend', _this.handleWindowMouseOrTouchUp);\n        }\n      }\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleWindowMouseOrTouchMove\", function (event) {\n      if (event instanceof MouseEvent) {\n        event.preventDefault();\n      }\n\n      event.stopPropagation();\n      var windowSelection = window.getSelection();\n\n      if (windowSelection && windowSelection.type === 'Range') {\n        windowSelection.empty();\n      }\n\n      var isDraggingProgress = _this.state.isDraggingProgress;\n\n      if (isDraggingProgress) {\n        var _this$getCurrentProgr2 = _this.getCurrentProgress(event),\n            currentTime = _this$getCurrentProgr2.currentTime,\n            currentTimePos = _this$getCurrentProgr2.currentTimePos;\n\n        _this.timeOnMouseMove = currentTime;\n\n        _this.setState({\n          currentTimePos: currentTimePos\n        });\n      }\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleWindowMouseOrTouchUp\", function (event) {\n      event.stopPropagation();\n      var newTime = _this.timeOnMouseMove;\n      var _this$props2 = _this.props,\n          audio = _this$props2.audio,\n          onChangeCurrentTimeError = _this$props2.onChangeCurrentTimeError,\n          onSeek = _this$props2.onSeek;\n\n      if (onSeek) {\n        _this.setState({\n          isDraggingProgress: false,\n          waitingForSeekCallback: true\n        }, function () {\n          onSeek(audio, newTime).then(function () {\n            return _this.setState({\n              waitingForSeekCallback: false\n            });\n          }, function (err) {\n            throw new Error(err);\n          });\n        });\n      } else {\n        var newProps = {\n          isDraggingProgress: false\n        };\n\n        if (audio.readyState === audio.HAVE_NOTHING || audio.readyState === audio.HAVE_METADATA || !isFinite(newTime)) {\n          newProps.currentTimePos = '0%';\n          onChangeCurrentTimeError && onChangeCurrentTimeError();\n        } else {\n          audio.currentTime = newTime;\n        }\n\n        _this.setState(newProps);\n      }\n\n      if (event instanceof MouseEvent) {\n        window.removeEventListener('mousemove', _this.handleWindowMouseOrTouchMove);\n        window.removeEventListener('mouseup', _this.handleWindowMouseOrTouchUp);\n      } else {\n        window.removeEventListener('touchmove', _this.handleWindowMouseOrTouchMove);\n        window.removeEventListener('touchend', _this.handleWindowMouseOrTouchUp);\n      }\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleAudioTimeUpdate\", throttle(function (e) {\n      var isDraggingProgress = _this.state.isDraggingProgress;\n      var audio = e.target;\n      if (isDraggingProgress || _this.state.waitingForSeekCallback === true) return;\n      var currentTime = audio.currentTime;\n\n      var duration = _this.getDuration();\n\n      _this.setState({\n        currentTimePos: \"\".concat((currentTime / duration * 100 || 0).toFixed(2), \"%\")\n      });\n    }, _this.props.progressUpdateInterval));\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleAudioDownloadProgressUpdate\", function (e) {\n      var audio = e.target;\n\n      var duration = _this.getDuration();\n\n      var downloadProgressArr = [];\n\n      for (var i = 0; i < audio.buffered.length; i++) {\n        var bufferedStart = audio.buffered.start(i);\n        var bufferedEnd = audio.buffered.end(i);\n        downloadProgressArr.push({\n          left: \"\".concat(Math.round(100 / duration * bufferedStart) || 0, \"%\"),\n          width: \"\".concat(Math.round(100 / duration * (bufferedEnd - bufferedStart)) || 0, \"%\")\n        });\n      }\n\n      clearTimeout(_this.downloadProgressAnimationTimer);\n\n      _this.setState({\n        downloadProgressArr: downloadProgressArr,\n        hasDownloadProgressAnimation: true\n      });\n\n      _this.downloadProgressAnimationTimer = setTimeout(function () {\n        _this.setState({\n          hasDownloadProgressAnimation: false\n        });\n      }, 200);\n    });\n\n    return _this;\n  }\n\n  createClass_default()(ProgressBar, [{\n    key: \"getDuration\",\n    value: function getDuration() {\n      var _this$props3 = this.props,\n          audio = _this$props3.audio,\n          srcDuration = _this$props3.srcDuration;\n      return typeof srcDuration === 'undefined' ? audio.duration : srcDuration;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var audio = this.props.audio;\n\n      if (audio && !this.hasAddedAudioEventListener) {\n        this.audio = audio;\n        this.hasAddedAudioEventListener = true;\n        audio.addEventListener('timeupdate', this.handleAudioTimeUpdate);\n        audio.addEventListener('progress', this.handleAudioDownloadProgressUpdate);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.audio && this.hasAddedAudioEventListener) {\n        this.audio.removeEventListener('timeupdate', this.handleAudioTimeUpdate);\n        this.audio.removeEventListener('progress', this.handleAudioDownloadProgressUpdate);\n      }\n\n      clearTimeout(this.downloadProgressAnimationTimer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          showDownloadProgress = _this$props4.showDownloadProgress,\n          showFilledProgress = _this$props4.showFilledProgress,\n          progressBar = _this$props4.progressBar,\n          i18nProgressBar = _this$props4.i18nProgressBar;\n      var _this$state = this.state,\n          currentTimePos = _this$state.currentTimePos,\n          downloadProgressArr = _this$state.downloadProgressArr,\n          hasDownloadProgressAnimation = _this$state.hasDownloadProgressAnimation;\n      return react.createElement(\"div\", {\n        className: \"rhap_progress-container\",\n        ref: progressBar,\n        \"aria-label\": i18nProgressBar,\n        role: \"progressbar\",\n        \"aria-valuemin\": 0,\n        \"aria-valuemax\": 100,\n        \"aria-valuenow\": Number(currentTimePos.split('%')[0]),\n        tabIndex: 0,\n        onMouseDown: this.handleMouseDownOrTouchStartProgressBar,\n        onTouchStart: this.handleMouseDownOrTouchStartProgressBar,\n        onContextMenu: this.handleContextMenu\n      }, react.createElement(\"div\", {\n        className: \"rhap_progress-bar \".concat(showDownloadProgress ? 'rhap_progress-bar-show-download' : '')\n      }, react.createElement(\"div\", {\n        className: \"rhap_progress-indicator\",\n        style: {\n          left: currentTimePos\n        }\n      }), showFilledProgress && react.createElement(\"div\", {\n        className: \"rhap_progress-filled\",\n        style: {\n          width: currentTimePos\n        }\n      }), showDownloadProgress && downloadProgressArr.map(function (_ref, i) {\n        var left = _ref.left,\n            width = _ref.width;\n        return react.createElement(\"div\", {\n          key: i,\n          className: \"rhap_download-progress\",\n          style: {\n            left: left,\n            width: width,\n            transitionDuration: hasDownloadProgressAnimation ? '.2s' : '0s'\n          }\n        });\n      })));\n    }\n  }]);\n\n  return ProgressBar;\n}(react.Component);\n\nvar ProgressBarForwardRef = function ProgressBarForwardRef(props, ref) {\n  return react.createElement(ProgressBar, extends_default()({}, props, {\n    progressBar: ref\n  }));\n};\n\n/* harmony default export */ const es_ProgressBar = ((0,react.forwardRef)(ProgressBarForwardRef));\n\n;// CONCATENATED MODULE: ./node_modules/react-h5-audio-player/es/CurrentTime.js\n\n\n\n\n\n\n\n\nfunction CurrentTime_createSuper(Derived) { var hasNativeReflectConstruct = CurrentTime_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction CurrentTime_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar CurrentTime = function (_PureComponent) {\n  inherits_default()(CurrentTime, _PureComponent);\n\n  var _super = CurrentTime_createSuper(CurrentTime);\n\n  function CurrentTime(props) {\n    var _this;\n\n    classCallCheck_default()(this, CurrentTime);\n\n    _this = _super.call(this, props);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"audio\", void 0);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"hasAddedAudioEventListener\", false);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"state\", {\n      currentTime: _this.props.defaultCurrentTime\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleAudioCurrentTimeChange\", function (e) {\n      var audio = e.target;\n      var _this$props = _this.props,\n          isLeftTime = _this$props.isLeftTime,\n          timeFormat = _this$props.timeFormat,\n          defaultCurrentTime = _this$props.defaultCurrentTime;\n\n      _this.setState({\n        currentTime: getDisplayTimeBySeconds(isLeftTime ? audio.duration - audio.currentTime : audio.currentTime, audio.duration, timeFormat) || defaultCurrentTime\n      });\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"addAudioEventListeners\", function () {\n      var audio = _this.props.audio;\n\n      if (audio && !_this.hasAddedAudioEventListener) {\n        _this.audio = audio;\n        _this.hasAddedAudioEventListener = true;\n        audio.addEventListener('timeupdate', _this.handleAudioCurrentTimeChange);\n        audio.addEventListener('loadedmetadata', _this.handleAudioCurrentTimeChange);\n      }\n    });\n\n    var _audio = props.audio,\n        _defaultCurrentTime = props.defaultCurrentTime,\n        _isLeftTime = props.isLeftTime,\n        _timeFormat = props.timeFormat;\n    var currentTime = _defaultCurrentTime;\n\n    if (_audio) {\n      currentTime = getDisplayTimeBySeconds(_isLeftTime ? _audio.duration - _audio.currentTime : _audio.currentTime, _audio.duration, _timeFormat);\n    }\n\n    _this.state = {\n      currentTime: currentTime\n    };\n    return _this;\n  }\n\n  createClass_default()(CurrentTime, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.addAudioEventListeners();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.addAudioEventListeners();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.audio && this.hasAddedAudioEventListener) {\n        this.audio.removeEventListener('timeupdate', this.handleAudioCurrentTimeChange);\n        this.audio.removeEventListener('loadedmetadata', this.handleAudioCurrentTimeChange);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.state.currentTime;\n    }\n  }]);\n\n  return CurrentTime;\n}(react.PureComponent);\n\n/* harmony default export */ const es_CurrentTime = (CurrentTime);\n;// CONCATENATED MODULE: ./node_modules/react-h5-audio-player/es/Duration.js\n\n\n\n\n\n\n\n\nfunction Duration_createSuper(Derived) { var hasNativeReflectConstruct = Duration_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction Duration_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar Duration = function (_PureComponent) {\n  inherits_default()(Duration, _PureComponent);\n\n  var _super = Duration_createSuper(Duration);\n\n  function Duration(props) {\n    var _this;\n\n    classCallCheck_default()(this, Duration);\n\n    _this = _super.call(this, props);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"audio\", void 0);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"hasAddedAudioEventListener\", false);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"state\", {\n      duration: _this.props.audio ? getDisplayTimeBySeconds(_this.props.audio.duration, _this.props.audio.duration, _this.props.timeFormat) : _this.props.defaultDuration\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleAudioDurationChange\", function (e) {\n      var audio = e.target;\n      var _this$props = _this.props,\n          timeFormat = _this$props.timeFormat,\n          defaultDuration = _this$props.defaultDuration;\n\n      _this.setState({\n        duration: getDisplayTimeBySeconds(audio.duration, audio.duration, timeFormat) || defaultDuration\n      });\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"addAudioEventListeners\", function () {\n      var audio = _this.props.audio;\n\n      if (audio && !_this.hasAddedAudioEventListener) {\n        _this.audio = audio;\n        _this.hasAddedAudioEventListener = true;\n        audio.addEventListener('durationchange', _this.handleAudioDurationChange);\n        audio.addEventListener('abort', _this.handleAudioDurationChange);\n      }\n    });\n\n    var _audio = props.audio,\n        _timeFormat = props.timeFormat,\n        _defaultDuration = props.defaultDuration;\n    _this.state = {\n      duration: _audio ? getDisplayTimeBySeconds(_audio.duration, _audio.duration, _timeFormat) : _defaultDuration\n    };\n    return _this;\n  }\n\n  createClass_default()(Duration, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.addAudioEventListeners();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.addAudioEventListeners();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.audio && this.hasAddedAudioEventListener) {\n        this.audio.removeEventListener('durationchange', this.handleAudioDurationChange);\n        this.audio.removeEventListener('abort', this.handleAudioDurationChange);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.state.duration;\n    }\n  }]);\n\n  return Duration;\n}(react.PureComponent);\n\n/* harmony default export */ const es_Duration = (Duration);\n;// CONCATENATED MODULE: ./node_modules/react-h5-audio-player/es/VolumeBar.js\n\n\n\n\n\n\n\n\nfunction VolumeBar_createSuper(Derived) { var hasNativeReflectConstruct = VolumeBar_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction VolumeBar_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar VolumeControls = function (_Component) {\n  inherits_default()(VolumeControls, _Component);\n\n  var _super = VolumeBar_createSuper(VolumeControls);\n\n  function VolumeControls() {\n    var _this;\n\n    classCallCheck_default()(this, VolumeControls);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"audio\", void 0);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"hasAddedAudioEventListener\", false);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"volumeBar\", (0,react.createRef)());\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"volumeAnimationTimer\", 0);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"lastVolume\", _this.props.volume);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"state\", {\n      currentVolumePos: \"\".concat((_this.lastVolume / 1 * 100 || 0).toFixed(2), \"%\"),\n      hasVolumeAnimation: false,\n      isDraggingVolume: false\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"getCurrentVolume\", function (event) {\n      var audio = _this.props.audio;\n\n      if (!_this.volumeBar.current) {\n        return {\n          currentVolume: audio.volume,\n          currentVolumePos: _this.state.currentVolumePos\n        };\n      }\n\n      var volumeBarRect = _this.volumeBar.current.getBoundingClientRect();\n\n      var maxRelativePos = volumeBarRect.width;\n      var relativePos = getPosX(event) - volumeBarRect.left;\n      var currentVolume;\n      var currentVolumePos;\n\n      if (relativePos < 0) {\n        currentVolume = 0;\n        currentVolumePos = '0%';\n      } else if (relativePos > volumeBarRect.width) {\n        currentVolume = 1;\n        currentVolumePos = '100%';\n      } else {\n        currentVolume = relativePos / maxRelativePos;\n        currentVolumePos = \"\".concat(relativePos / maxRelativePos * 100, \"%\");\n      }\n\n      return {\n        currentVolume: currentVolume,\n        currentVolumePos: currentVolumePos\n      };\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleContextMenu\", function (event) {\n      event.preventDefault();\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleClickVolumeButton\", function () {\n      var audio = _this.props.audio;\n\n      if (audio.volume > 0) {\n        _this.lastVolume = audio.volume;\n        audio.volume = 0;\n      } else {\n        audio.volume = _this.lastVolume;\n      }\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleVolumnControlMouseOrTouchDown\", function (event) {\n      event.stopPropagation();\n      var audio = _this.props.audio;\n\n      var _this$getCurrentVolum = _this.getCurrentVolume(event.nativeEvent),\n          currentVolume = _this$getCurrentVolum.currentVolume,\n          currentVolumePos = _this$getCurrentVolum.currentVolumePos;\n\n      audio.volume = currentVolume;\n\n      _this.setState({\n        isDraggingVolume: true,\n        currentVolumePos: currentVolumePos\n      });\n\n      if (event.nativeEvent instanceof MouseEvent) {\n        window.addEventListener('mousemove', _this.handleWindowMouseOrTouchMove);\n        window.addEventListener('mouseup', _this.handleWindowMouseOrTouchUp);\n      } else {\n        window.addEventListener('touchmove', _this.handleWindowMouseOrTouchMove);\n        window.addEventListener('touchend', _this.handleWindowMouseOrTouchUp);\n      }\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleWindowMouseOrTouchMove\", function (event) {\n      if (event instanceof MouseEvent) {\n        event.preventDefault();\n      }\n\n      event.stopPropagation();\n      var audio = _this.props.audio;\n      var windowSelection = window.getSelection();\n\n      if (windowSelection && windowSelection.type === 'Range') {\n        windowSelection.empty();\n      }\n\n      var isDraggingVolume = _this.state.isDraggingVolume;\n\n      if (isDraggingVolume) {\n        var _this$getCurrentVolum2 = _this.getCurrentVolume(event),\n            currentVolume = _this$getCurrentVolum2.currentVolume,\n            currentVolumePos = _this$getCurrentVolum2.currentVolumePos;\n\n        audio.volume = currentVolume;\n\n        _this.setState({\n          currentVolumePos: currentVolumePos\n        });\n      }\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleWindowMouseOrTouchUp\", function (event) {\n      event.stopPropagation();\n\n      _this.setState({\n        isDraggingVolume: false\n      });\n\n      if (event instanceof MouseEvent) {\n        window.removeEventListener('mousemove', _this.handleWindowMouseOrTouchMove);\n        window.removeEventListener('mouseup', _this.handleWindowMouseOrTouchUp);\n      } else {\n        window.removeEventListener('touchmove', _this.handleWindowMouseOrTouchMove);\n        window.removeEventListener('touchend', _this.handleWindowMouseOrTouchUp);\n      }\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleAudioVolumeChange\", function (e) {\n      var isDraggingVolume = _this.state.isDraggingVolume;\n      var _ref = e.target,\n          volume = _ref.volume;\n\n      if (_this.lastVolume > 0 && volume === 0 || _this.lastVolume === 0 && volume > 0) {\n        _this.props.onMuteChange();\n      }\n\n      _this.lastVolume = volume;\n      if (isDraggingVolume) return;\n\n      _this.setState({\n        hasVolumeAnimation: true,\n        currentVolumePos: \"\".concat((volume / 1 * 100 || 0).toFixed(2), \"%\")\n      });\n\n      clearTimeout(_this.volumeAnimationTimer);\n      _this.volumeAnimationTimer = setTimeout(function () {\n        _this.setState({\n          hasVolumeAnimation: false\n        });\n      }, 100);\n    });\n\n    return _this;\n  }\n\n  createClass_default()(VolumeControls, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var audio = this.props.audio;\n\n      if (audio && !this.hasAddedAudioEventListener) {\n        this.audio = audio;\n        this.hasAddedAudioEventListener = true;\n        audio.addEventListener('volumechange', this.handleAudioVolumeChange);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.audio && this.hasAddedAudioEventListener) {\n        this.audio.removeEventListener('volumechange', this.handleAudioVolumeChange);\n      }\n\n      clearTimeout(this.volumeAnimationTimer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          audio = _this$props.audio,\n          showFilledVolume = _this$props.showFilledVolume,\n          i18nVolumeControl = _this$props.i18nVolumeControl;\n      var _this$state = this.state,\n          currentVolumePos = _this$state.currentVolumePos,\n          hasVolumeAnimation = _this$state.hasVolumeAnimation;\n\n      var _ref2 = audio || {},\n          volume = _ref2.volume;\n\n      return react.createElement(\"div\", {\n        ref: this.volumeBar,\n        onMouseDown: this.handleVolumnControlMouseOrTouchDown,\n        onTouchStart: this.handleVolumnControlMouseOrTouchDown,\n        onContextMenu: this.handleContextMenu,\n        role: \"progressbar\",\n        \"aria-label\": i18nVolumeControl,\n        \"aria-valuemin\": 0,\n        \"aria-valuemax\": 100,\n        \"aria-valuenow\": Number((volume * 100).toFixed(0)),\n        tabIndex: 0,\n        className: \"rhap_volume-bar-area\"\n      }, react.createElement(\"div\", {\n        className: \"rhap_volume-bar\"\n      }, react.createElement(\"div\", {\n        className: \"rhap_volume-indicator\",\n        style: {\n          left: currentVolumePos,\n          transitionDuration: hasVolumeAnimation ? '.1s' : '0s'\n        }\n      }), showFilledVolume && react.createElement(\"div\", {\n        className: \"rhap_volume-filled\",\n        style: {\n          width: currentVolumePos\n        }\n      })));\n    }\n  }]);\n\n  return VolumeControls;\n}(react.Component);\n\n/* harmony default export */ const VolumeBar = (VolumeControls);\n;// CONCATENATED MODULE: ./node_modules/react-h5-audio-player/es/constants.js\nvar RHAP_UI;\n\n(function (RHAP_UI) {\n  RHAP_UI[\"CURRENT_TIME\"] = \"CURRENT_TIME\";\n  RHAP_UI[\"CURRENT_LEFT_TIME\"] = \"CURRENT_LEFT_TIME\";\n  RHAP_UI[\"PROGRESS_BAR\"] = \"PROGRESS_BAR\";\n  RHAP_UI[\"DURATION\"] = \"DURATION\";\n  RHAP_UI[\"ADDITIONAL_CONTROLS\"] = \"ADDITIONAL_CONTROLS\";\n  RHAP_UI[\"MAIN_CONTROLS\"] = \"MAIN_CONTROLS\";\n  RHAP_UI[\"VOLUME_CONTROLS\"] = \"VOLUME_CONTROLS\";\n  RHAP_UI[\"LOOP\"] = \"LOOP\";\n  RHAP_UI[\"VOLUME\"] = \"VOLUME\";\n})(RHAP_UI || (RHAP_UI = {}));\n;// CONCATENATED MODULE: ./node_modules/react-h5-audio-player/es/index.js\n\n\n\n\n\n\n\n\nfunction es_createSuper(Derived) { var hasNativeReflectConstruct = es_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction es_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar H5AudioPlayer = function (_Component) {\n  inherits_default()(H5AudioPlayer, _Component);\n\n  var _super = es_createSuper(H5AudioPlayer);\n\n  function H5AudioPlayer() {\n    var _this;\n\n    classCallCheck_default()(this, H5AudioPlayer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"audio\", (0,react.createRef)());\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"progressBar\", (0,react.createRef)());\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"container\", (0,react.createRef)());\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"lastVolume\", _this.props.volume);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"listenTracker\", void 0);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"volumeAnimationTimer\", void 0);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"downloadProgressAnimationTimer\", void 0);\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"togglePlay\", function (e) {\n      e.stopPropagation();\n      var audio = _this.audio.current;\n\n      if ((audio.paused || audio.ended) && audio.src) {\n        _this.playAudioPromise();\n      } else if (!audio.paused) {\n        audio.pause();\n      }\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"playAudioPromise\", function () {\n      var playPromise = _this.audio.current.play();\n\n      if (playPromise) {\n        playPromise.then(null).catch(function (err) {\n          var onPlayError = _this.props.onPlayError;\n          onPlayError && onPlayError(new Error(err));\n        });\n      } else {\n        _this.forceUpdate();\n      }\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"isPlaying\", function () {\n      var audio = _this.audio.current;\n      if (!audio) return false;\n      return !audio.paused && !audio.ended;\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handlePlay\", function (e) {\n      _this.forceUpdate();\n\n      _this.props.onPlay && _this.props.onPlay(e);\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handlePause\", function (e) {\n      if (!_this.audio) return;\n\n      _this.forceUpdate();\n\n      _this.props.onPause && _this.props.onPause(e);\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleEnded\", function (e) {\n      if (!_this.audio) return;\n\n      _this.forceUpdate();\n\n      _this.props.onEnded && _this.props.onEnded(e);\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleAbort\", function (e) {\n      _this.props.onAbort && _this.props.onAbort(e);\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleClickVolumeButton\", function () {\n      var audio = _this.audio.current;\n\n      if (audio.volume > 0) {\n        _this.lastVolume = audio.volume;\n        audio.volume = 0;\n      } else {\n        audio.volume = _this.lastVolume;\n      }\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleMuteChange\", function () {\n      _this.forceUpdate();\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleClickLoopButton\", function () {\n      _this.audio.current.loop = !_this.audio.current.loop;\n\n      _this.forceUpdate();\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleClickRewind\", function () {\n      var _this$props = _this.props,\n          progressJumpSteps = _this$props.progressJumpSteps,\n          progressJumpStep = _this$props.progressJumpStep;\n      var jumpStep = progressJumpSteps.backward || progressJumpStep;\n\n      _this.setJumpTime(-jumpStep);\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleClickForward\", function () {\n      var _this$props2 = _this.props,\n          progressJumpSteps = _this$props2.progressJumpSteps,\n          progressJumpStep = _this$props2.progressJumpStep;\n      var jumpStep = progressJumpSteps.forward || progressJumpStep;\n\n      _this.setJumpTime(jumpStep);\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"setJumpTime\", function (time) {\n      var audio = _this.audio.current;\n      var duration = audio.duration,\n          prevTime = audio.currentTime;\n\n      if (audio.readyState === audio.HAVE_NOTHING || audio.readyState === audio.HAVE_METADATA || !isFinite(duration) || !isFinite(prevTime)) {\n        return _this.props.onChangeCurrentTimeError && _this.props.onChangeCurrentTimeError();\n      }\n\n      var currentTime = prevTime + time / 1000;\n\n      if (currentTime < 0) {\n        audio.currentTime = 0;\n        currentTime = 0;\n      } else if (currentTime > duration) {\n        audio.currentTime = duration;\n        currentTime = duration;\n      } else {\n        audio.currentTime = currentTime;\n      }\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"setJumpVolume\", function (volume) {\n      var newVolume = _this.audio.current.volume + volume;\n      if (newVolume < 0) newVolume = 0;else if (newVolume > 1) newVolume = 1;\n      _this.audio.current.volume = newVolume;\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"handleKeyDown\", function (e) {\n      if (_this.props.hasDefaultKeyBindings) {\n        switch (e.key) {\n          case ' ':\n            if (e.target === _this.container.current || e.target === _this.progressBar.current) {\n              e.preventDefault();\n\n              _this.togglePlay(e);\n            }\n\n            break;\n\n          case 'ArrowLeft':\n            _this.handleClickRewind();\n\n            break;\n\n          case 'ArrowRight':\n            _this.handleClickForward();\n\n            break;\n\n          case 'ArrowUp':\n            e.preventDefault();\n\n            _this.setJumpVolume(_this.props.volumeJumpStep);\n\n            break;\n\n          case 'ArrowDown':\n            e.preventDefault();\n\n            _this.setJumpVolume(-_this.props.volumeJumpStep);\n\n            break;\n\n          case 'l':\n            _this.handleClickLoopButton();\n\n            break;\n\n          case 'm':\n            _this.handleClickVolumeButton();\n\n            break;\n        }\n      }\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"renderUIModules\", function (modules) {\n      return modules.map(function (comp, i) {\n        return _this.renderUIModule(comp, i);\n      });\n    });\n\n    defineProperty_default()(assertThisInitialized_default()(_this), \"renderUIModule\", function (comp, key) {\n      var _this$props3 = _this.props,\n          defaultCurrentTime = _this$props3.defaultCurrentTime,\n          progressUpdateInterval = _this$props3.progressUpdateInterval,\n          showDownloadProgress = _this$props3.showDownloadProgress,\n          showFilledProgress = _this$props3.showFilledProgress,\n          showFilledVolume = _this$props3.showFilledVolume,\n          defaultDuration = _this$props3.defaultDuration,\n          customIcons = _this$props3.customIcons,\n          showSkipControls = _this$props3.showSkipControls,\n          onClickPrevious = _this$props3.onClickPrevious,\n          onClickNext = _this$props3.onClickNext,\n          onChangeCurrentTimeError = _this$props3.onChangeCurrentTimeError,\n          showJumpControls = _this$props3.showJumpControls,\n          customAdditionalControls = _this$props3.customAdditionalControls,\n          customVolumeControls = _this$props3.customVolumeControls,\n          muted = _this$props3.muted,\n          timeFormat = _this$props3.timeFormat,\n          volumeProp = _this$props3.volume,\n          loopProp = _this$props3.loop,\n          mse = _this$props3.mse,\n          i18nAriaLabels = _this$props3.i18nAriaLabels;\n\n      switch (comp) {\n        case RHAP_UI.CURRENT_TIME:\n          return react.createElement(\"div\", {\n            key: key,\n            id: \"rhap_current-time\",\n            className: \"rhap_time rhap_current-time\"\n          }, react.createElement(es_CurrentTime, {\n            audio: _this.audio.current,\n            isLeftTime: false,\n            defaultCurrentTime: defaultCurrentTime,\n            timeFormat: timeFormat\n          }));\n\n        case RHAP_UI.CURRENT_LEFT_TIME:\n          return react.createElement(\"div\", {\n            key: key,\n            id: \"rhap_current-left-time\",\n            className: \"rhap_time rhap_current-left-time\"\n          }, react.createElement(es_CurrentTime, {\n            audio: _this.audio.current,\n            isLeftTime: true,\n            defaultCurrentTime: defaultCurrentTime,\n            timeFormat: timeFormat\n          }));\n\n        case RHAP_UI.PROGRESS_BAR:\n          return react.createElement(es_ProgressBar, {\n            key: key,\n            ref: _this.progressBar,\n            audio: _this.audio.current,\n            progressUpdateInterval: progressUpdateInterval,\n            showDownloadProgress: showDownloadProgress,\n            showFilledProgress: showFilledProgress,\n            onSeek: mse && mse.onSeek,\n            onChangeCurrentTimeError: onChangeCurrentTimeError,\n            srcDuration: mse && mse.srcDuration,\n            i18nProgressBar: i18nAriaLabels.progressControl\n          });\n\n        case RHAP_UI.DURATION:\n          return react.createElement(\"div\", {\n            key: key,\n            className: \"rhap_time rhap_total-time\"\n          }, mse && mse.srcDuration ? getDisplayTimeBySeconds(mse.srcDuration, mse.srcDuration, _this.props.timeFormat) : react.createElement(es_Duration, {\n            audio: _this.audio.current,\n            defaultDuration: defaultDuration,\n            timeFormat: timeFormat\n          }));\n\n        case RHAP_UI.ADDITIONAL_CONTROLS:\n          return react.createElement(\"div\", {\n            key: key,\n            className: \"rhap_additional-controls\"\n          }, _this.renderUIModules(customAdditionalControls));\n\n        case RHAP_UI.MAIN_CONTROLS:\n          {\n            var isPlaying = _this.isPlaying();\n\n            var actionIcon;\n\n            if (isPlaying) {\n              actionIcon = customIcons.pause ? customIcons.pause : react.createElement(iconify/* Icon */.JO, {\n                icon: pause_circle/* default */.Z\n              });\n            } else {\n              actionIcon = customIcons.play ? customIcons.play : react.createElement(iconify/* Icon */.JO, {\n                icon: play_circle/* default */.Z\n              });\n            }\n\n            return react.createElement(\"div\", {\n              key: key,\n              className: \"rhap_main-controls\"\n            }, showSkipControls && react.createElement(\"button\", {\n              \"aria-label\": i18nAriaLabels.previous,\n              className: \"rhap_button-clear rhap_main-controls-button rhap_skip-button\",\n              type: \"button\",\n              onClick: onClickPrevious\n            }, customIcons.previous ? customIcons.previous : react.createElement(iconify/* Icon */.JO, {\n              icon: skip_previous/* default */.Z\n            })), showJumpControls && react.createElement(\"button\", {\n              \"aria-label\": i18nAriaLabels.rewind,\n              className: \"rhap_button-clear rhap_main-controls-button rhap_rewind-button\",\n              type: \"button\",\n              onClick: _this.handleClickRewind\n            }, customIcons.rewind ? customIcons.rewind : react.createElement(iconify/* Icon */.JO, {\n              icon: rewind/* default */.Z\n            })), react.createElement(\"button\", {\n              \"aria-label\": isPlaying ? i18nAriaLabels.pause : i18nAriaLabels.play,\n              className: \"rhap_button-clear rhap_main-controls-button rhap_play-pause-button\",\n              type: \"button\",\n              onClick: _this.togglePlay\n            }, actionIcon), showJumpControls && react.createElement(\"button\", {\n              \"aria-label\": i18nAriaLabels.forward,\n              className: \"rhap_button-clear rhap_main-controls-button rhap_forward-button\",\n              type: \"button\",\n              onClick: _this.handleClickForward\n            }, customIcons.forward ? customIcons.forward : react.createElement(iconify/* Icon */.JO, {\n              icon: fast_forward/* default */.Z\n            })), showSkipControls && react.createElement(\"button\", {\n              \"aria-label\": i18nAriaLabels.next,\n              className: \"rhap_button-clear rhap_main-controls-button rhap_skip-button\",\n              type: \"button\",\n              onClick: onClickNext\n            }, customIcons.next ? customIcons.next : react.createElement(iconify/* Icon */.JO, {\n              icon: skip_next/* default */.Z\n            })));\n          }\n\n        case RHAP_UI.VOLUME_CONTROLS:\n          return react.createElement(\"div\", {\n            key: key,\n            className: \"rhap_volume-controls\"\n          }, _this.renderUIModules(customVolumeControls));\n\n        case RHAP_UI.LOOP:\n          {\n            var loop = _this.audio.current ? _this.audio.current.loop : loopProp;\n            var loopIcon;\n\n            if (loop) {\n              loopIcon = customIcons.loop ? customIcons.loop : react.createElement(iconify/* Icon */.JO, {\n                icon: repeat/* default */.Z\n              });\n            } else {\n              loopIcon = customIcons.loopOff ? customIcons.loopOff : react.createElement(iconify/* Icon */.JO, {\n                icon: repeat_off/* default */.Z\n              });\n            }\n\n            return react.createElement(\"button\", {\n              key: key,\n              \"aria-label\": loop ? i18nAriaLabels.loop : i18nAriaLabels.loopOff,\n              className: \"rhap_button-clear rhap_repeat-button\",\n              type: \"button\",\n              onClick: _this.handleClickLoopButton\n            }, loopIcon);\n          }\n\n        case RHAP_UI.VOLUME:\n          {\n            var _ref = _this.audio.current || {},\n                _ref$volume = _ref.volume,\n                volume = _ref$volume === void 0 ? muted ? 0 : volumeProp : _ref$volume;\n\n            var volumeIcon;\n\n            if (volume) {\n              volumeIcon = customIcons.volume ? customIcons.volume : react.createElement(iconify/* Icon */.JO, {\n                icon: volume_high/* default */.Z\n              });\n            } else {\n              volumeIcon = customIcons.volume ? customIcons.volumeMute : react.createElement(iconify/* Icon */.JO, {\n                icon: volume_mute/* default */.Z\n              });\n            }\n\n            return react.createElement(\"div\", {\n              key: key,\n              className: \"rhap_volume-container\"\n            }, react.createElement(\"button\", {\n              \"aria-label\": volume ? i18nAriaLabels.volume : i18nAriaLabels.volumeMute,\n              onClick: _this.handleClickVolumeButton,\n              type: \"button\",\n              className: \"rhap_button-clear rhap_volume-button\"\n            }, volumeIcon), react.createElement(VolumeBar, {\n              audio: _this.audio.current,\n              volume: volume,\n              onMuteChange: _this.handleMuteChange,\n              showFilledVolume: showFilledVolume,\n              i18nVolumeControl: i18nAriaLabels.volumeControl\n            }));\n          }\n\n        default:\n          if (!(0,react.isValidElement)(comp)) {\n            return null;\n          }\n\n          return comp.key ? comp : (0,react.cloneElement)(comp, {\n            key: key\n          });\n      }\n    });\n\n    return _this;\n  }\n\n  createClass_default()(H5AudioPlayer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.forceUpdate();\n      var audio = this.audio.current;\n\n      if (this.props.muted) {\n        audio.volume = 0;\n      } else {\n        audio.volume = this.lastVolume;\n      }\n\n      audio.addEventListener('error', function (e) {\n        _this2.props.onError && _this2.props.onError(e);\n      });\n      audio.addEventListener('canplay', function (e) {\n        _this2.props.onCanPlay && _this2.props.onCanPlay(e);\n      });\n      audio.addEventListener('canplaythrough', function (e) {\n        _this2.props.onCanPlayThrough && _this2.props.onCanPlayThrough(e);\n      });\n      audio.addEventListener('play', this.handlePlay);\n      audio.addEventListener('abort', this.handleAbort);\n      audio.addEventListener('ended', this.handleEnded);\n      audio.addEventListener('playing', function (e) {\n        _this2.props.onPlaying && _this2.props.onPlaying(e);\n      });\n      audio.addEventListener('seeking', function (e) {\n        _this2.props.onSeeking && _this2.props.onSeeking(e);\n      });\n      audio.addEventListener('seeked', function (e) {\n        _this2.props.onSeeked && _this2.props.onSeeked(e);\n      });\n      audio.addEventListener('waiting', function (e) {\n        _this2.props.onWaiting && _this2.props.onWaiting(e);\n      });\n      audio.addEventListener('emptied', function (e) {\n        _this2.props.onEmptied && _this2.props.onEmptied(e);\n      });\n      audio.addEventListener('stalled', function (e) {\n        _this2.props.onStalled && _this2.props.onStalled(e);\n      });\n      audio.addEventListener('suspend', function (e) {\n        _this2.props.onSuspend && _this2.props.onSuspend(e);\n      });\n      audio.addEventListener('loadstart', function (e) {\n        _this2.props.onLoadStart && _this2.props.onLoadStart(e);\n      });\n      audio.addEventListener('loadedmetadata', function (e) {\n        _this2.props.onLoadedMetaData && _this2.props.onLoadedMetaData(e);\n      });\n      audio.addEventListener('loadeddata', function (e) {\n        _this2.props.onLoadedData && _this2.props.onLoadedData(e);\n      });\n      audio.addEventListener('pause', this.handlePause);\n      audio.addEventListener('timeupdate', throttle(function (e) {\n        _this2.props.onListen && _this2.props.onListen(e);\n      }, this.props.listenInterval));\n      audio.addEventListener('volumechange', function (e) {\n        _this2.props.onVolumeChange && _this2.props.onVolumeChange(e);\n      });\n      audio.addEventListener('encrypted', function (e) {\n        var mse = _this2.props.mse;\n        mse && mse.onEcrypted && mse.onEcrypted(e);\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props4 = this.props,\n          src = _this$props4.src,\n          autoPlayAfterSrcChange = _this$props4.autoPlayAfterSrcChange;\n\n      if (prevProps.src !== src) {\n        if (autoPlayAfterSrcChange) {\n          this.playAudioPromise();\n        } else {\n          this.forceUpdate();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var audio = this.audio.current;\n\n      if (audio) {\n        audio.removeEventListener('play', this.handlePlay);\n        audio.removeEventListener('pause', this.handlePause);\n        audio.removeEventListener('abort', this.handleAbort);\n        audio.removeAttribute('src');\n        audio.load();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          className = _this$props5.className,\n          src = _this$props5.src,\n          loopProp = _this$props5.loop,\n          preload = _this$props5.preload,\n          autoPlay = _this$props5.autoPlay,\n          crossOrigin = _this$props5.crossOrigin,\n          mediaGroup = _this$props5.mediaGroup,\n          header = _this$props5.header,\n          footer = _this$props5.footer,\n          layout = _this$props5.layout,\n          customProgressBarSection = _this$props5.customProgressBarSection,\n          customControlsSection = _this$props5.customControlsSection,\n          children = _this$props5.children,\n          style = _this$props5.style,\n          i18nAriaLabels = _this$props5.i18nAriaLabels;\n      var loop = this.audio.current ? this.audio.current.loop : loopProp;\n      var loopClass = loop ? 'rhap_loop--on' : 'rhap_loop--off';\n      var isPlayingClass = this.isPlaying() ? 'rhap_play-status--playing' : 'rhap_play-status--paused';\n      return react.createElement(\"div\", {\n        role: \"group\",\n        tabIndex: 0,\n        \"aria-label\": i18nAriaLabels.player,\n        className: \"rhap_container \".concat(loopClass, \" \").concat(isPlayingClass, \" \").concat(className),\n        onKeyDown: this.handleKeyDown,\n        ref: this.container,\n        style: style\n      }, react.createElement(\"audio\", {\n        src: src,\n        controls: false,\n        loop: loop,\n        autoPlay: autoPlay,\n        preload: preload,\n        crossOrigin: crossOrigin,\n        mediaGroup: mediaGroup,\n        ref: this.audio\n      }, children), header && react.createElement(\"div\", {\n        className: \"rhap_header\"\n      }, header), react.createElement(\"div\", {\n        className: \"rhap_main \".concat(getMainLayoutClassName(layout))\n      }, react.createElement(\"div\", {\n        className: \"rhap_progress-section\"\n      }, this.renderUIModules(customProgressBarSection)), react.createElement(\"div\", {\n        className: \"rhap_controls-section\"\n      }, this.renderUIModules(customControlsSection))), footer && react.createElement(\"div\", {\n        className: \"rhap_footer\"\n      }, footer));\n    }\n  }]);\n\n  return H5AudioPlayer;\n}(react.Component);\n\ndefineProperty_default()(H5AudioPlayer, \"defaultProps\", {\n  autoPlay: false,\n  autoPlayAfterSrcChange: true,\n  listenInterval: 1000,\n  progressJumpStep: 5000,\n  progressJumpSteps: {},\n  volumeJumpStep: 0.1,\n  loop: false,\n  muted: false,\n  preload: 'auto',\n  progressUpdateInterval: 20,\n  defaultCurrentTime: '--:--',\n  defaultDuration: '--:--',\n  timeFormat: 'auto',\n  volume: 1,\n  className: '',\n  showJumpControls: true,\n  showSkipControls: false,\n  showDownloadProgress: true,\n  showFilledProgress: true,\n  showFilledVolume: false,\n  customIcons: {},\n  customProgressBarSection: [RHAP_UI.CURRENT_TIME, RHAP_UI.PROGRESS_BAR, RHAP_UI.DURATION],\n  customControlsSection: [RHAP_UI.ADDITIONAL_CONTROLS, RHAP_UI.MAIN_CONTROLS, RHAP_UI.VOLUME_CONTROLS],\n  customAdditionalControls: [RHAP_UI.LOOP],\n  customVolumeControls: [RHAP_UI.VOLUME],\n  layout: 'stacked',\n  hasDefaultKeyBindings: true,\n  i18nAriaLabels: {\n    player: 'Audio player',\n    progressControl: 'Audio progress control',\n    volumeControl: 'Volume control',\n    play: 'Play',\n    pause: 'Pause',\n    rewind: 'Rewind',\n    forward: 'Forward',\n    previous: 'Previous',\n    next: 'Skip',\n    loop: 'Disable loop',\n    loopOff: 'Enable loop',\n    volume: 'Mute',\n    volumeMute: 'Unmute'\n  }\n});\n\n/* harmony default export */ const es = (H5AudioPlayer);\n\n\n//# sourceURL=webpack://life-in-a-box/./node_modules/react-h5-audio-player/es/index.js_+_6_modules?");

/***/ })

}]);